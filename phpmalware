#!/bin/bash
# Name: PHPMalware
# Version: 2017-10-20
# Description: Check for malwares within PHP code based on POST requests and PHP files content.
# Developer: Robin Labadie
# Websites: haisoft.fr | lrob.fr | terageek.org

## Directories
siteslocation="/var/www/vhosts"
# Log location relative to website, so $siteslocation/log
sitelog="logs/access_log"
sitelog_ssl="logs/access_ssl_log"

# Exclude from log detection
excludelogs="303
404
503
403
index.php
admin-ajax.php
wp-cron.php
wp-login.php
wp-comment.php"

##############
### Script ###
##############

## Misc Vars
selfname="PHPMalware"
currdate="$(LC_ALL=en_GB.UTF8 date +'%d/%b/%Y')"

# Download bash API
if [ ! -f "ultimate-bash-api.sh" ]; then
	wget https://raw.githubusercontent.com/UltimateByte/ultimate-bash-api/master/ultimate-bash-api.sh
	chmod +x ultimate-bash-api.sh
fi
source ultimate-bash-api.sh

# List all domains and subdomains 
# domainlist="$(echo "SELECT sys_users.home FROM sys_users;" | plesk db -N)"
# domainlist="$(echo "SELECT dom.name, h.www_root FROM domains dom LEFT JOIN DomainServices d ON (dom.id = d.dom_id AND d.type = 'web') LEFT JOIN hosting h ON h.dom_id = dom.id" | plesk db | tail -n +2 | grep -v "NULL")"
 # for domaininfo in ${domainlist} do
 	# domain="$(echo "${domaininfo}" | awk '{print $1}')"
	# path="$(echo "${domaininfo}" | awk '{print $2}')"
# done

fn_detect_logs(){
	# Search through domains
	for domain in $(find "${siteslocation}" -maxdepth 1 -type d -printf '%P\n'); do
		# If HTTP log is found, for the given domain, search into it
		if [ -f "${siteslocation}/${domain}/${sitelog}" ]; then
			postdetect="$(grep "POST" "${siteslocation}/${domain}/${sitelog}" | grep "${currdate}:" | grep ".php" | grep -Fv -e "${excludelogs}" | cut -d " " -f 7 | uniq;)"
		else
			unset postdetect
		fi
		# If HTTPS log is found, for the given domain, search into itn
		if [ -f "${siteslocation}/${domain}/${sitelog_ssl}" ]; then
			postdetect_ssl="$(grep "POST" "${siteslocation}/${domain}/${sitelog_ssl}" | grep "${currdate}:" | grep ".php" | grep -Fv -e "${excludelogs}" | cut -d " " -f 7 | uniq;)"
		else
			unset postdetect_ssl
		fi
		# If malicious POST are found in HTTP requests
		if [ -n "${postdetect}" ]; then
			fn_logecho "# ${domain} HTTP POST"
			for maliciouspost in ${postdetect}; do
				fn_logecho "${siteslocation}/${domain}${maliciouspost}"
			done
		fi
		# If malicious POST are found in HTTPS requests
		if [ -n "${postdetect_ssl}" ]; then
			fn_logecho "# ${domain} HTTPS POST"
			for maliciouspostssl in ${postdetect_ssl}; do
				fn_logecho "${siteslocation}/${domain}${maliciouspostssl}"
			done
		fi
	done
}
fn_detect_logs
fn_duration
